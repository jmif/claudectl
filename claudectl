#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

ACCOUNTS_DIR="$HOME/.claudectl"
SETTINGS_FILE="$ACCOUNTS_DIR/settings.json"
GLOBAL_CLAUDE_MD="$HOME/.claude/CLAUDE.md"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to create initial setup
setup_accounts_dir() {
    echo "Setting up Claudectl's config directory, $ACCOUNTS_DIR..."
    mkdir -p "$ACCOUNTS_DIR"
    
    # Create default settings.json
    cat > "$SETTINGS_FILE" << 'EOF'
{
  "accounts": [
    "Work",
    "Other"
  ]
}
EOF
    
    echo "Created $ACCOUNTS_DIR directory and settings.json"
    echo "Edit the settings.json file to configure account profiles for your Claude Code accounts."
}

# Function to parse JSON and get account names
get_account_names() {
    if command -v jq > /dev/null 2>&1; then
        jq -r '.accounts[]' "$SETTINGS_FILE" 2>/dev/null
    else
        # Fallback without jq - basic parsing
        grep -o '"[^"]*"' "$SETTINGS_FILE" | grep -v '"accounts"' | sed 's/"//g'
    fi
}


# Function to show account selection menu
show_menu() {
    echo "* claudectl"
    echo "Written By Claude Code For Claude Code"
    echo "Select a profile to launch the Claude Code CLI"
    echo "=============================================="
    
    local accounts=($(get_account_names))
    local menu_options=()
    local i=1
    
    # Add Personal (default) option first
    echo "$i) Personal (default)"
    menu_options+=("personal")
    ((i++))
    
    # Add account options
    for account in "${accounts[@]}"; do
        if [ -n "$account" ]; then
            echo "$i) $account"
            menu_options+=("$account")
            ((i++))
        fi
    done
    
    # Add edit settings option
    echo "e) Edit settings.json"
    
    echo ""
    echo "Press a key (1-$((i-1)), e, first letter, or Enter for Default):"
    
    # Read single character without requiring enter
    read -n1 -s choice
    echo # Add newline after input
    
    # Handle edit option (E or e)
    if [[ "$choice" = "E" || "$choice" = "e" ]]; then
        local editor_cmd="${EDITOR:-vim}"
        echo "Opening settings.json with $editor_cmd..."
        if ! bash -lc "$editor_cmd \"$SETTINGS_FILE\""; then
            echo "Falling back to vim..."
            vim "$SETTINGS_FILE"
        fi
        exit 0
    fi
    
    # Handle enter key (same as option 1 - Personal)
    if [[ "$choice" = "" ]]; then
        choice="1"
    fi
    
    # Handle first letter matching
    local selected=""
    local choice_upper=$(echo "$choice" | tr '[:lower:]' '[:upper:]')
    local choice_lower=$(echo "$choice" | tr '[:upper:]' '[:lower:]')
    
    # Check Personal first (P or p)
    if [[ "$choice_upper" = "P" ]]; then
        selected="personal"
    else
        # Check accounts from settings for first letter match
        for account in "${menu_options[@]}"; do
            if [ "$account" != "personal" ]; then
                local first_letter=$(echo "$account" | cut -c1 | tr '[:lower:]' '[:upper:]')
                if [[ "$choice_upper" = "$first_letter" ]]; then
                    selected="$account"
                    break
                fi
            fi
        done
    fi
    
    # If no letter match found, try numeric choice
    if [ -z "$selected" ] && [[ "$choice" =~ ^[0-9]+$ ]] && [ "$choice" -ge 1 ] && [ "$choice" -le $((i-1)) ]; then
        selected="${menu_options[$((choice-1))]}"
    fi
    
    # Execute the selection
    if [ -n "$selected" ]; then
        if [ "$selected" = "personal" ]; then
            echo "Launching Claude Code CLI with Personal profile..."
            exec env -u CLAUDE_CONFIG_DIR claude "$@"
        else
            local config_dir="$ACCOUNTS_DIR/$selected"
            if [ ! -d "$config_dir" ]; then
                echo "Creating profile directory: $config_dir"
                mkdir -p "$config_dir"
            fi
            # Link global CLAUDE.md into profile directory
            ln -sf "$GLOBAL_CLAUDE_MD" "$config_dir/CLAUDE.md"
            echo "Launching Claude Code CLI with $selected profile..."
            exec env CLAUDE_CONFIG_DIR="$config_dir" claude "$@"
        fi
    else
        echo "Invalid selection. Please try again."
        exit 1
    fi
}

# Main execution
main() {
    # Check if accounts directory exists
    if [ ! -d "$ACCOUNTS_DIR" ]; then
        setup_accounts_dir
        echo ""
    fi
    
    # Check if settings file exists
    if [ ! -f "$SETTINGS_FILE" ]; then
        echo "Error: settings.json not found. Running setup..."
        setup_accounts_dir
        echo ""
    fi
    
    # Show menu
    show_menu
}

# Run main function
main "$@"
